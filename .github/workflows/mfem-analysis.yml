name: build-analysis

on:
  push:

env:
  HYPRE_ARCHIVE: v2.19.0.tar.gz
  HYPRE_TOP_DIR: hypre-2.19.0
  METIS_ARCHIVE: metis-4.0.3.tar.gz
  METIS_TOP_DIR: metis-4.0.3

jobs:
  analysis:
    runs-on: ubuntu-latest

    steps:
    - name: checkout MFEM
      uses: actions/checkout@v2
      with:
        path: mfem

    - name: Get MPI (Linux)
      run: |
        sudo apt-get install mpich libmpich-dev
        export MAKE_CXX_FLAG="MPICXX=mpic++"

    - name: Get coveralls
      run: |
        if [[ "$CODECOV" == "YES" ]]
        then
           export PYTHONUSERBASE=$HOME/local;
           pip install --user cpp-coveralls;
           pip install --user pyyaml;
           PATH=$HOME/local/bin:$PATH;
        fi

    - name: Cache Hypre Install
      id: hypre-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.HYPRE_TOP_DIR }}
        key: ${{ runner.os }}-build-${{ env.HYPRE_TOP_DIR }}-v1

    - name: Get Hypre
      if: steps.hypre-cache.outputs.cache-hit != 'true'
      uses: ./mfem/.github/actions/install-hypre
      with:
        hypre-archive: ${{ env.HYPRE_ARCHIVE }}
        hypre-dir: ${{ env.HYPRE_TOP_DIR }}

    - name: Cache Metis Install
      id: metis-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.METIS_TOP_DIR }}
        key: ${{ runner.os }}-build-${{ env.METIS_TOP_DIR }}-v1

    - name: Install Metis
      if: steps.metis-cache.outputs.cache-hit != 'true'
      uses: ./mfem/.github/actions/install-metis
      with:
        metis-archive: ${{ env.METIS_ARCHIVE }}
        metis-dir: ${{ env.METIS_TOP_DIR }}

    # MFEM build and test
    - name: build-mfem
      uses: ./mfem/.github/actions/build-mfem
      with:
        os: ${{ runner.os }}
        debug: NO
        mpi: YES
        codecov: YES
        hypre-dir: ${{ env.HYPRE_TOP_DIR }}
        metis-dir: ${{ env.METIS_TOP_DIR }}
        mfem-dir: mfem

    - name: test (no clean)
      run: |
        cd mfem && make test-noclean

    - name: codecov
        coveralls --include fem --include general --include linalg --include mesh --exclude /usr --gcov-options '\-lp' --root mfem;
    - name: gitignore
      run: |
        cd mfem/tests/scripts
        ./runtest gitignore
