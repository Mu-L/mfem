# Copyright (c) 2010-2025, Lawrence Livermore National Security, LLC. Produced
# at the Lawrence Livermore National Laboratory. All Rights reserved. See files
# LICENSE and NOTICE for details. LLNL-CODE-806117.
#
# This file is part of the MFEM library. For more information and source code
# availability visit https://mfem.org.
#
# MFEM is free software; you can redistribute it and/or modify it under the
# terms of the BSD-3 license. We welcome feedback and contributions, see file
# CONTRIBUTING.md for details.

name: "Sanitizers"

permissions:
  actions: write

on:
  push:
    branches:
      - master
      - next
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  LLVM_VERSION: 18.1.3
  MSAN_OPTIONS: "poison_in_dtor=1"
  UBSAN_OPTIONS: "halt_on_error=1,
                  print_stacktrace=1"
  ASAN_OPTIONS: "detect_leaks=1,
                 strict_init_order=1,
                 strict_string_checks=1,
                 check_initialization_order=1,
                 detect_stack_use_after_return=1"

jobs:
  Sanitizers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sanitizer: [AddressSanitizer, UndefinedBehaviorSanitizer, MemorySanitizer]
        include:
            # AddressSanitizer
            # https://clang.llvm.org/docs/AddressSanitizer.html
          - sanitizer: AddressSanitizer
            cxxflags: "-fsanitize=address -fno-omit-frame-pointer 
                       -fsanitize-address-use-after-scope"
            ldflags: "-fsanitize=address"
            llvm_sanitizer: "Address"

            # UndefinedBehaviorSanitizer
            # https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html
          - sanitizer: UndefinedBehaviorSanitizer
            cxxflags: "-fsanitize=undefined -fno-omit-frame-pointer"
            ldflags: "-fsanitize=undefined"
            llvm_sanitizer: "Undefined"
            
            # MemorySanitizer
            # https://clang.llvm.org/docs/MemorySanitizer.html
          - sanitizer: MemorySanitizer
            cxxflags: "-fsanitize=memory -fno-omit-frame-pointer 
                       -fsanitize-memory-track-origins -fsanitize-memory-use-after-dtor"
            ldflags: "-fsanitize=memory"
            llvm_sanitizer: "MemoryWithOrigins"

    name: "${{ matrix.sanitizer }}"

    steps:
      - name: Setup Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Setup Environment
        run: |
          echo "CC=cc" >> $GITHUB_ENV
          echo "CXX=c++" >> $GITHUB_ENV
          echo "LLVM_SANITIZER=${{ matrix.llvm_sanitizer }}" >> $GITHUB_ENV
  
      - name: Dump Environment
        run: |
          echo "> ${{ env.CC }} -v"
          ${{ env.CC }} -v
          echo "> ${{ env.CXX }} -v"
          ${{ env.CXX }} -v
          echo "> LLVM_SANITIZER: ${{ env.LLVM_SANITIZER }}"

      - name: MFEM Checkout
        uses: actions/checkout@v4
        with:
          path: mfem

      - name: Build libc++
        if: matrix.sanitizer != 'AddressSanitizer'
        run: |
          "${GITHUB_WORKSPACE}/mfem/.github/workflows/mfem-sanitizers.sh"
          echo "EXTRA_CXX_FLAGS=-stdlib=libc++ -I${GITHUB_WORKSPACE}/llvm-build/include/c++/v1 -Isystem${GITHUB_WORKSPACE}/llvm-build/include/c++/v1" >> $GITHUB_ENV
          echo "EXTRA_LD_FLAGS=-L${GITHUB_WORKSPACE}/llvm-build/lib -lc++abi -Wl,-rpath,${GITHUB_WORKSPACE}/llvm-build/lib" >> $GITHUB_ENV

      - name: MFEM Build
        uses: mfem/github-actions/build-mfem@v2.5
        env:
          CXXFLAGS: "-g -O1 -std=c++17 ${{ matrix.cxxflags }} ${{ env.EXTRA_CXX_FLAGS }}"
          LDFLAGS: "${{ matrix.ldflags }} ${{ env.EXTRA_LD_FLAGS }}"
        with:
          os: ${{ runner.os }}
          target: opt
          mpi: seq
          hypre-dir: unused-hypre-dir
          metis-dir: unused-metis-dir
          mfem-dir: mfem
          build-system: make
          library-only: true # false
          config-options: CXX=${{ env.CXX }}

      - name: MFEM Info
        working-directory: mfem
        run: make info

      - name: MFEM Sanitize
        working-directory: mfem
        run: make check # test
