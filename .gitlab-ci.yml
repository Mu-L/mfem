variables:
    BUILD_ROOT: ${CI_BUILDS_DIR}/mfem_${CI_COMMIT_REF_SLUG}
    BUILD_PATH: ${CI_BUILDS_DIR}/mfem_${CI_COMMIT_REF_SLUG}/${PLAT}/${TOOLCHAIN}
    REBASELINE: "NO"
    ASTYLE: ${CI_BUILDS_DIR}/mfem_${CI_COMMIT_REF_SLUG}/tpls/install/astyle/astyle
    BUILD_QUARTZ_ALLOC_NAME: mfem_ci_${CI_COMMIT_SHORT_SHA}

stages:
    - precleanup
    - setup
    - libs
    - build
    - test
    - rebaseline
    - postcleanup

.precleanup:
    stage: precleanup
    variables:
        GIT_STRATEGY: none
    script:
        rm -rf ${BUILD_ROOT}/${PLAT}

.setup:
    stage: setup
    variables:
        GIT_STRATEGY: none
    script:
        - mkdir -p ${BUILD_ROOT} && cd ${BUILD_ROOT}
        - if [ ! -d "tpls" ]; then git clone ssh://git@mybitbucket.llnl.gov:7999/mfem/tpls.git; fi
        - if [ ! -d "tests" ]; then git clone ssh://git@mybitbucket.llnl.gov:7999/mfem/tests.git; fi
        - cd tpls && git pull && cd ..
        - cd tests && git pull && cd ..

build_astyle:
    stage: libs
    tags:
        - shell
        - quartz
    variables:
        GIT_STRATEGY: none
    script:
        - cd ${BUILD_ROOT}/tpls
        - make astyle PREFIX=${BUILD_ROOT}/tpls/install/ BUILD_DIR=${BUILD_ROOT}/tpls/install/ LOG_DIR=${BUILD_ROOT}/tpls/install/

.with_gcc_6_1_0:
    variables:
        TOOLCHAIN: gcc_6_1_0
    before_script:
        - module load gcc/6.1.0

.with_gcc_4_9_3:
    variables:
        TOOLCHAIN: gcc_4_9_3
    before_script:
        - module load gcc/4.9.3

.build_hypre:
    stage: libs
    variables:
        GIT_STRATEGY: none
    script:
        - cd ${BUILD_ROOT}/tpls
        - mkdir -p ${BUILD_PATH}
        - make clean
        - make -j 4 hypre PREFIX=${BUILD_PATH}/hypre/src/ BUILD_DIR=${BUILD_PATH} LOG_DIR=${BUILD_PATH}

.build_metis:
    stage: libs
    variables:
        GIT_STRATEGY: none
    script:
        - cd ${BUILD_ROOT}/tpls
        - mkdir -p ${BUILD_PATH}
        - make ${METIS} PREFIX=${BUILD_PATH}/ BUILD_DIR=${BUILD_PATH} LOG_DIR=${BUILD_PATH} CC=cc CXX=c++

.build_mfem:
    stage: build
    script:
        - mkdir -p ${BUILD_PATH}
        - cd ..
        - cp -r mfem ${BUILD_PATH}/mfem_${MFEM_USE_MPI}_${MFEM_DEBUG}
        - cd ${BUILD_PATH}/mfem_${MFEM_USE_MPI}_${MFEM_DEBUG}
        - make config CXX=c++ MPICXX=mpicxx MFEM_USE_MPI=${MFEM_USE_MPI} MFEM_DEBUG=${MFEM_DEBUG} MFEM_MPIEXEC=$MPIEXEC MFEM_MPIEXEC_NP=$MPIEXEC_NP
        - make -j 4

.sanitycheck_mfem:
    stage: test
    variables:
        GIT_STRATEGY: none
    script:
        - cd ${BUILD_PATH}/mfem_${MFEM_USE_MPI}_${MFEM_DEBUG}
        - make test

.stylecheck_mfem:
    stage: test
    variables:
        GIT_STRATEGY: none
    script:
        - make style-check ASTYLE_BIN=$ASTYLE

.baselinecheck_mfem:
    stage: test
    except:
        refs:
            - master
    script:
        - cd ${BUILD_PATH}
        - ln -s ${CI_PROJECT_DIR} mfem
        - cd tests
        - mkdir -p runs
        - cd runs
        - rm -f *
        - ../runtest ../../mfem baseline

.rebaseline_mfem:
    stage: rebaseline
    only:
        refs:
            - master
        variables:
            - $REBASELINE == "YES"
    script:
        - cd ${BUILD_PATH}
        - ln -s ${CI_PROJECT_DIR} mfem
        - cd tests
        - mkdir -p runs
        - cd runs
        - rm -f *
        - ../runtest ../../mfem baseline
        - cp baseline.out ../baseline-${SYS_TYPE}.saved
        - cd ..
        - git add baseline-${SYS_TYPE}.saved
        - git commit -m "Rebaselined"
        - git push origin master

.postcleanup:
    stage: postcleanup
    variables:
        GIT_STRATEGY: none
    script:
        rm -rf ${BUILD_ROOT}/${PLAT}


include:
    - local: .gitlab-ci-quartz.yml
    #- local: .gitlab-ci-lassen.yml
